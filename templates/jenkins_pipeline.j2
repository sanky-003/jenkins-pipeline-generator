pipeline {
    agent any
    parameters {
        string(name: 'GIT_REPO', defaultValue: '{{ repo_url | default("https://github.com/yourusername/yourrepo.git") }}', description: 'Git Repository URL')
        string(name: 'GIT_BRANCH', defaultValue: '{{ branch | default("main") }}', description: 'Branch to build')
    }
    options {
        timeout(time: 1, unit: 'HOURS')
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
        timestamps()
        githubProjectProperty(
            displayName: '',
            projectUrlStr: '${params.GIT_REPO}'
        )
    }
    def docker_image = "${env.JOB_NAME.split('/')[1]}:${env.BUILD_NUMBER}"
    stages {
        stage('Checkout') {
            steps {
                script {
                    git (url: "${params.GIT_REPO}", branch: "${params.GIT_BRANCH}")
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    {% if language == 'java' and build_tool == 'maven' %}
                    sh 'mvn clean package -DskipTests'
                    artifact 'target/*.jar'
                    {% elif language == 'java' and build_tool == 'gradle' %}
                    sh 'gradle clean build'
                    artifact 'build/libs/*.jar'
                    {% elif language == 'javascript' %}
                    sh 'npm install'
                    {% elif language == 'python' %}
                    sh 'pip install -r requirements.txt'
                    {% endif %}
                }
            }
        }
        stage('Create Docker Image') {
            steps {
                script {
                    if (!fileExists('Dockerfile')) {
                        {% if language == 'java'%}
                        writeFile(file: 'Dockerfile', text: '''
                        FROM openjdk:17-jdk-slim
                        WORKDIR /app
                        COPY target/*.jar app.jar
                        ENTRYPOINT ["java", "-jar", "app.jar"]
                        ''')
                        {% elif language == 'javascript' %}
                        writeFile(file: 'Dockerfile', text: '''
                        FROM node:16
                        WORKDIR /app
                        COPY package*.json ./
                        RUN npm install
                        COPY . .
                        ENTRYPOINT ["npm", "start"]
                        ''')
                        {% elif language == 'python' %}
                        writeFile(file: 'Dockerfile', text: '''
                        FROM python:3.9
                        WORKDIR /app
                        COPY requirements.txt ./
                        RUN pip install -r requirements.txt
                        COPY . .
                        ENTRYPOINT ["python", "app.py"]
                        ''')
                        {% endif %}
                    else {
                        print('Dockerfile already exists')
                    }
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    sh 'docker build -t ${docker_image} .'
                }
            }
        }
    }
}